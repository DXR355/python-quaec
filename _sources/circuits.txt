..
    This work is licensed under the Creative Commons Attribution-
    NonCommercial-ShareAlike 3.0 Unported License. To view a copy of this
    license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a
    letter to Creative Commons, 444 Castro Street, Suite 900, Mountain View,
    California, 94041, USA.

Circuit Manipulation and Simulation
===================================

Quantum circuits are modeled in QuaEC by a sequence type, :class:`qecc.Circuit`,
that stores zero or more circuit elements, known as `locations`. Each location
has a `kind` that indicates if it is a gate, measurement or preparation
location, as well as which gate, which measurement or which preparation is
indicated.

Creating a :class:`qecc.Location` instance consists of specifying the kind of
location along with a sequence of indices indicating which qubits that location
acts upon.

>>> import qecc as q
>>> loc = q.Location('CNOT', 0, 2)
>>> loc.as_clifford()


:class:`qecc.Location` - Class representing locations in a circuit
------------------------------------------------------------------

.. autoclass:: qecc.Location
    :members:
    :undoc-members:
    
    
:class:`qecc.Circuit` - Class modeling arrangements of locations
----------------------------------------------------------------

.. autoclass:: qecc.Circuit
    :members:
    :undoc-members:
